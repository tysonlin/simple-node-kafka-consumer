# Default values for helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: tysonlin/simple-node-kafka-consumer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.0.1

kafka:
  consumer:
    # kafka topic to produce message to
    topic: test
    # kafka topic to produce encrypted message to
    encryptedTopic: test-encrypted
    # from existing ConfigMap
    # fromExistingConfigMap: <k8s secret name for kafka>
    # kafka config to create producer
    config: |
      bootstrap.servers=localhost:9092
      sasl.mechanism=PLAIN
    # override these on helm install
    # ccloud:
    #   # base64 api key, will be injected as secret in kafka config "sasl.username" on runtime
    #   key: <base64 cluster api key>
    #   # base64 api secret, will be injected as secret in kafka config "sasl.password" on runtime
    #   secret: <base64 cluster api secret>
    #   # read from existing secret name
    #   fromExistingSecret: <k8s secret name for ccloud>
  
# crypto:
#   # any base64 from 32-length string, override this on helm install
#   key: <base64 crypto key>
#   # any base64 from 16-length string, override this on helm install
#   iv: <base64 crypto iv>
#   # read from existing secret name
#   fromExistingSecret: <k8s secret name for crypto>

database:
  config: |
    host=localhost
    database=test
  username: <base64 database username>
  password: <base64 database password>

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
